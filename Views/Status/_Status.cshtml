@model TaskMA.Models.Employee_Status
@using PagedList.Mvc;
@using PagedList;
@using TaskMA.Models;
@using System.Collections.Generic;


<img id="divLoading_status" src="@Url.Content("~/Content/Images/loading.gif")" alt="" />

<div id="divStatus" class="panel panel-default">

    @*Warning sucess messages*@
    @if (TempData["StatusSuccess"] != null)
    {
        <div class="alert alert-dismissible alert-success">
            <button type="button" class="close" data-dismiss="alert"><span class="glyphicon glyphicon-remove"></span></button>
            <p><strong>Success:</strong> @TempData["StatusSuccess"].ToString()</p>
        </div>
    }

    else if (TempData["StatusSuccess_edit"] != null)
    {
        <div class="alert alert-dismissible alert-success">
            <button type="button" class="close" data-dismiss="alert"><span class="glyphicon glyphicon-remove"></span></button>
            <p><strong>Success:</strong> @TempData["StatusSuccess_edit"].ToString()</p>
        </div>
    }

    else if (TempData["StatusSuccess_delete"] != null)
    {
        <div class="alert alert-dismissible alert-success">
            <button type="button" class="close" data-dismiss="alert"><span class="glyphicon glyphicon-remove"></span></button>
            <p><strong>Success:</strong> @TempData["StatusSuccess_delete"].ToString()</p>
        </div>
    }
    <div class="panel-heading">


        <div id="Search">

            @using (Ajax.BeginForm("StatusSearch", "Admin", new AjaxOptions
            {
                InsertionMode = InsertionMode.Replace,
                UpdateTargetId = "divStatus",
                LoadingElementId = "divLoading_status"
            }))
            {

                @Html.TextBox("statusSearchBox", "", new { @class = "search_box", placeholder = " Search status..." })
                <input class="btn btn-default btn-sm" type="submit" value="Search" />
            }

        </div>

        <div id="Clear">
            @Ajax.ActionLink("Clear all", "StatusSearch", "Status", new { @class = "search_box", employeeSearchBox = " " },
            new AjaxOptions
            {
                InsertionMode = InsertionMode.Replace,
                UpdateTargetId = "divStatus",
                LoadingElementId = "divLoading_status"
            }, new { @class = "btn btn-default btn-sm" })

        </div>

        <div id="Add">
            <button class="btn btn-primary btn-sm" onclick="location.href='@Url.Action("Create", "Status")';return false;">New Status</button>
        </div>

    </div>
    <div class="panel-body">

        <table class="table table-striped table-hover ">
            <tr class="content">
                <th class="content">
                    Status

                </th>
                <th class="content">
                    Operations
                </th>
            </tr>

            @foreach (var item in Model.statuses)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.StatusName)
                    </td>
                    <td>

                        <a href="@Url.Action("Edit", "Status" , new { id=item.StatusId })" title="Edit">
                            <i class="glyphicon glyphicon-pencil"></i>
                            <span class="sr-only">Edit</span>
                        </a> |
                        @*<a href="@Url.Action("Details", "Status" , new { id=item.StatusId })" title="Details">
                                <i class="glyphicon glyphicon-list"></i>
                                <span class="sr-only">Details</span>
                            </a>*@
                        <a href="@Url.Action("Delete", "Status" , new { id=item.StatusId })" title="Delete">
                            <i class="glyphicon glyphicon-trash"></i>
                            <span class="sr-only">Delete</span>
                        </a>
                    </td>
                </tr>
            }

        </table>
  
        <div class="pagination pagination-sm">
            @Html.PagedListPager(
                         new StaticPagedList<Status>(Model.statuses, Model.statusPageNumber, Model.statusPageSize, Model.statusCount),
                                                    pageNumber => Url.Action("StatusSearch", "Status", new { pageIndex = pageNumber, statusSearchBox = Model.statusSearchBox }
                    ),
                       PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
                       PagedListRenderOptions.Classic, new AjaxOptions()
                       {
                           HttpMethod = "GET",
                           UpdateTargetId = "divStatus",
                           LoadingElementId = "imgLoading"
                       })
                                   )
        </div>
    </div>
</div>